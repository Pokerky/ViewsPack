<UserControl x:Class="ViewsPack.AutoScrollableView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ViewsPack"
             mc:Ignorable="d" 
             Loaded="UserControl_Loaded"
             d:DesignHeight="260"  d:DesignWidth="400">

    <UserControl.Resources>
        <!-- circle item template -->
        <DataTemplate x:Key="circleTemplate">
            <Grid>
                <Ellipse Width="6" Height="6" Fill="White"/>
            </Grid>
        </DataTemplate>

        <!-- style for circle button -->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#C8bfc9d4"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#C8a9b3bf"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Arrow.Stroke" Color="#FFF4F4F4"/>
        <Style x:Key="CircleButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Opacity" Value="0.8"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse
                                x:Name="border"
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                StrokeThickness="0" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            </Ellipse>

                            <Path
                                x:Name="arrow"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" 
                                Data="M2,0 L10,8 L2,16" 
                                StrokeThickness="1.6" 
                                Stroke="{StaticResource Arrow.Stroke}"/>

                            <ContentPresenter 
                                x:Name="contentPresenter" Focusable="False" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}" 
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- panel template for horizontal -->
        <ItemsPanelTemplate x:Key="horizontalPanel">
            <StackPanel x:Name="stackPanel" Orientation="Horizontal" IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <!-- panel template for vertical -->
        <ItemsPanelTemplate x:Key="verticalPanel">
            <StackPanel x:Name="stackPanel" Orientation="Vertical" IsItemsHost="True"/>
        </ItemsPanelTemplate>

        <!-- style for horizontal listbox-->
        <Style x:Key="horizontalListBox" TargetType="ListBox">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="ItemsPanel" Value="{StaticResource horizontalPanel}"/>
        </Style>
        <!-- style for vertical listbox-->
        <Style x:Key="verticalListBox" TargetType="ListBox">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="ItemsPanel" Value="{StaticResource verticalPanel}"/>
        </Style>

    </UserControl.Resources>

    <Grid ClipToBounds="True">
        <!-- main content -->
        <ScrollViewer
            x:Name="scrollViewer"
            PreviewMouseWheel="ScrollViewer_PreviewMouseWheel"
            Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AutoScrollableView}}, Path=ActualWidth}"
            Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AutoScrollableView}}, Path=ActualHeight}"         
            ScrollViewer.VerticalScrollBarVisibility="Hidden"
            ScrollViewer.HorizontalScrollBarVisibility="Hidden">
            <ItemsControl x:Name="itemsHost" ItemTemplate="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AutoScrollableView}}, Path=ItemTemplate}">
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Control.Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AutoScrollableView}}, Path=ActualWidth}"/>
                        <Setter Property="Control.Height" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AutoScrollableView}}, Path=ActualHeight}"/>
                        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Control.Opacity" Value="0.8"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </ScrollViewer>
        <!-- left button -->
        <Button 
            x:Name="leftCtrlBtn" Height="30" Width="30" 
            Style="{StaticResource CircleButtonStyle}" HorizontalAlignment="Left"
            Click="LeftCtrlBtn_Click">
            <Button.LayoutTransform>
                <TransformGroup>
                    <RotateTransform CenterX="15" CenterY="15" Angle="180"/>
                </TransformGroup>
            </Button.LayoutTransform>
        </Button>
        <!-- top button -->
        <Button 
            x:Name="topCtrlBtn" Height="30" Width="30" 
            Style="{StaticResource CircleButtonStyle}" VerticalAlignment="Top"
            Click="TopCtrlBtn_Click">
            <Button.LayoutTransform>
                <TransformGroup>
                    <RotateTransform CenterX="15" CenterY="15" Angle="-90"/>
                </TransformGroup>
            </Button.LayoutTransform>
        </Button>
        <!-- right button -->
        <Button
            x:Name="rightCtrlBtn" Height="30" Width="30"
            Style="{StaticResource CircleButtonStyle}" 
            Click="RightCtrlBtn_Click"/>
        <!-- bottom button -->
        <Button 
            x:Name="bottomCtrlBtn" Height="30" Width="30" 
            Style="{StaticResource CircleButtonStyle}"
            Click="BottomCtrlBtn_Click">
            <Button.LayoutTransform>
                <TransformGroup>
                    <RotateTransform CenterX="15" CenterY="15" Angle="90"/>
                </TransformGroup>
            </Button.LayoutTransform>
        </Button>
        <!-- overall bar -->
        <ListBox
            x:Name="overallBar"
            BorderThickness="0"
            Background="#5Fbfc9d4"
            PreviewMouseDown="OverallBar_PreviewMouseDown"
            ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AutoScrollableView}}, Path=Items}"
            ItemTemplate="{StaticResource circleTemplate}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Opacity" Value="0.6"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border>
                                    <ContentPresenter Margin="3"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Opacity" Value="1"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
    </Grid>
</UserControl>
